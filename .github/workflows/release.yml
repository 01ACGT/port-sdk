name: Release

on:
  workflow_dispatch: {}
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  RUST_TOOLCHAIN: nightly-2021-12-09
  NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  release-sdk:
    runs-on: ubuntu-latest
    name: Release SDK on NPM
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          always-auth: true

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Install Yarn dependencies
        run: yarn install
      - name: Install Solana
        if: steps.solana-cache.outputs.cache-hit != 'true'
        run: |
          sh -c "$(curl -sSfL https://release.solana.com/v1.9.1/install)"
      - name: Setup Solana Path
        run: |
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH
          export PATH="/home/runner/.local/share/solana/install/active_release/bin:$PATH"
          solana --version
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          components: rustfmt, clippy
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v1
      - name: Install Anchor
        run: |
          sudo apt-get update && sudo apt-get install -y pkg-config build-essential libudev-dev
          npm i -g @project-serum/anchor-cli@v0.20.1
      - name: Parse IDLs
        run: yarn idl:generate
      - run: yarn build
      - run: |
          echo 'npmAuthToken: "${NPM_AUTH_TOKEN}"' >> .yarnrc.yml
      - name: Publish
        run: yarn publish --registry https://registry.npmjs.org